# Generated by Django 4.1.1 on 2023-06-13 13:53

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Configuracion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(default='Configuracion', max_length=255)),
                ('num_columns', models.IntegerField()),
                ('graficas_seleccionadas', models.JSONField()),
                ('wyId', models.IntegerField()),
                ('tipo', models.CharField(default='Configuracion', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Matches',
            fields=[
                ('status', models.TextField()),
                ('roundId', models.PositiveIntegerField()),
                ('gameWeek', models.PositiveIntegerField()),
                ('seasonId', models.PositiveIntegerField()),
                ('dateUtc', models.DateTimeField()),
                ('venue', models.TextField()),
                ('wyId', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('label', models.TextField()),
                ('duration', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('roleId', models.AutoField(primary_key=True, serialize=False)),
                ('code2', models.CharField(max_length=2)),
                ('code3', models.CharField(max_length=3)),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Teams',
            fields=[
                ('city', models.TextField()),
                ('name', models.TextField(max_length=10000)),
                ('wyId', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('officialName', models.TextField()),
                ('type', models.TextField()),
                ('image', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nombre', models.CharField(max_length=255)),
                ('equipoId', models.IntegerField(null=True)),
                ('groups', models.ManyToManyField(related_name='usuarios', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='usuarios', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TeamsData',
            fields=[
                ('teamsDataId', models.AutoField(primary_key=True, serialize=False)),
                ('scoreET', models.PositiveIntegerField()),
                ('side', models.TextField()),
                ('score', models.PositiveIntegerField()),
                ('scoreP', models.PositiveIntegerField()),
                ('hasFormation', models.PositiveIntegerField()),
                ('scoreHT', models.PositiveIntegerField()),
                ('matchId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.matches')),
                ('teamId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.teams')),
            ],
        ),
        migrations.CreateModel(
            name='Players',
            fields=[
                ('weight', models.PositiveIntegerField()),
                ('firstName', models.TextField()),
                ('middleName', models.TextField()),
                ('lastName', models.TextField()),
                ('birthDate', models.DateField()),
                ('height', models.PositiveIntegerField()),
                ('wyId', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('foot', models.TextField()),
                ('shortName', models.TextField()),
                ('currentNationalTeamId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='current_national_team', to='main.teams')),
                ('currentTeamId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='current_team', to='main.teams')),
                ('roleId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.roles')),
            ],
        ),
        migrations.AddField(
            model_name='matches',
            name='winnerId',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.teams'),
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('eventId', models.PositiveIntegerField(null=True)),
                ('subEventId', models.PositiveIntegerField(null=True)),
                ('subEventName', models.TextField()),
                ('eventName', models.TextField()),
                ('matchPeriod', models.TextField()),
                ('eventSec', models.FloatField()),
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('x1', models.PositiveIntegerField()),
                ('y1', models.PositiveIntegerField()),
                ('x2', models.PositiveIntegerField()),
                ('y2', models.PositiveIntegerField()),
                ('matchId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.matches')),
                ('playerId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.players')),
                ('tags', models.ManyToManyField(to='main.tags')),
                ('teamId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.teams')),
            ],
        ),
    ]
